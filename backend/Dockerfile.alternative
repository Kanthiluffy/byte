FROM node:18

# Install required language tools with specific Java version
# First try to install specific OpenJDK version, fallback to default
RUN apt-get update && \
    (apt-get install -y openjdk-17-jdk || apt-get install -y default-jdk) && \
    apt-get install -y \
    build-essential \
    g++ \
    python3 \
    python3-pip \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Find and set Java home dynamically
RUN JAVA_HOME_FOUND=$(find /usr/lib/jvm -name "java-*-openjdk*" -type d | head -1) && \
    if [ -z "$JAVA_HOME_FOUND" ]; then JAVA_HOME_FOUND="/usr/lib/jvm/default-java"; fi && \
    echo "export JAVA_HOME=$JAVA_HOME_FOUND" >> /etc/environment && \
    echo "export PATH=\$JAVA_HOME/bin:\$PATH" >> /etc/environment

# Set environment variables for this container
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH="$JAVA_HOME/bin:$PATH"

# Verify installations
RUN java -version && javac -version && g++ --version && python3 --version

# Create app directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production

# Copy application code
COPY . .

# Create temp directory with proper permissions
RUN mkdir -p temp && chmod 755 temp

# Expose the port
EXPOSE 5000

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Start the application
CMD ["node", "server.js"]
