# Alternative Dockerfile using Alpine Linux for smaller size
FROM node:18-alpine

# Install required packages using Alpine package manager
RUN apk add --no-cache \
    openjdk11-jdk \
    g++ \
    make \
    python3 \
    py3-pip \
    curl \
    bash

# Set Java environment variables for Alpine
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk
ENV PATH="$JAVA_HOME/bin:$PATH"

# Verify installations
RUN node --version && npm --version && java -version && javac -version && g++ --version && python3 --version

# Create app directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production

# Copy application code
COPY . .

# Create temp directory with proper permissions
RUN mkdir -p temp && chmod 755 temp

# Expose the port
EXPOSE 5000

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Start the application
CMD ["node", "server.js"]
